<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Proposta Comercial</title>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <style>
        table, th, td {
            border: 1px solid black;
        }
    </style>
</head>
<body>
    <h1>Proposta Comercial</h1>

    <form method="POST" action="{{ url_for('proposta') }}">
        <input type="hidden" name="client_id" id="client_id" value="{% if client_data and 'id' in client_data %}{{ client_data['id'] }}{% endif %}">

        <label for="cpf_cnpj" title="CPF/CNPJ">CPF/CNPJ:</label>
        <input type="text" name="cpf_cnpj" id="cpf_cnpj" required onblur="populateClientData()" autocomplete="tax-id" placeholder="CPF/CNPJ">
        <input type="hidden" id="client_data" data-client="{{ client_data | tojson }}"><br>

        <label for="company" title="EMPRESA">EMPRESA:</label>
        <input type="text" name="company" id="company" autocomplete="organization" readonly><br>

        <label for="contact_name" title="CONTATO">CONTATO:</label>
        <input type="text" name="contact_name" id="contact_name" autocomplete="name" readonly><br>

        <label for="phone" title="TELEFONE">TELEFONE:</label>
        <input type="text" name="phone" id="phone" autocomplete="tel" readonly><br>

        <label for="email" title="EMAIL">EMAIL:</label>
        <input type="text" name="email" id="email" autocomplete="email" readonly><br>

        <label for="number_store" title="LOJA">LOJA:</label>
        <input type="text" name="number_store" id="number_store" autocomplete="off" readonly><br>

        <label for="status">STATUS:</label>
        <select name="status" id="status">
            <option value="Enviada">Enviada</option>
            <option value="Aprovada">Aprovada</option>
            <option value="Reprovada">Reprovada</option>
        </select><br>

        <label for="delivery_address" title="END DE ENTREGA">ENDERECO DE ENTREGA</label>
        <input type="text" name="delivery_address" id="delivery_address"><br>

        <label for="delivery_date">DATA DE ENTREGA:</label>
        <input type="text" name="delivery_date" id="delivery_date" pattern="\d{2}/\d{2}/\d{4}" placeholder="__/__/____"><br>

        <label for="withdrawal_date">DATA DE RETIRADA:</label>
        <input type="text" name="withdrawal_date" id="withdrawal_date" pattern="\d{2}/\d{2}/\d{4}" placeholder="__/__/____"><br>

        <label for="start_date">DATA DE INICIO:</label>
        <input type="text" name="start_date" id="start_date" pattern="\d{2}/\d{2}/\d{4}" onblur="updatePeriodDays()" placeholder="__/__/____"><br>

        <label for="end_date">DATA FINAL:</label>
        <input type="text" name="end_date" id="end_date" pattern="\d{2}/\d{2}/\d{4}" onblur="updatePeriodDays()" placeholder="__/__/____"><br>

        <label for="period_days">PERIODO:</label>
        <input type="text" name="period_days" id="period_days" readonly><br>

        <label for="validity" title="VALIDADE">VALIDADE DA PROPOSTA:</label>
        <input type="text" name="validity" id="validity"><br>

        <input type="hidden" name="product_id" class="product_id" value="{% if product_data and 'id' in product_data %}{{ product_data['id'] }}{% endif %}">

        <label for="product_code" title="product_code">CODIGO:</label>
        <input type="text" name="product_code" id="product_code" placeholder="CODIGO">
        <input type="hidden" id="product_data" data-product="{{ product_data | tojson }}">
        <button type="button" onclick="populateProductData()">ADICIONAR</button><br>

        <input type="hidden" id="description" name="description" autocomplete="name">
        <input type="hidden" id="type" name="type" autocomplete="name">
        <input type="hidden" id="price" name="price" autocomplete="off">
        <input type="hidden" id="add_description" name="add_description" autocomplete="off">

        <table border="1">
            <thead>
                <tr>
                    <th>CODIGO</th>
                    <th>DESCRICAO</th>
                    <th>TIPO</th>
                    <th>R$</th>
                    <th>DESCRICAO COMPLEMENTAR</th>
                </tr>
            </thead>
            <tbody id="product_table_body">
                <tr>
                    <td class="product_code_placeholder">{{ product_data.product_code or '' }}</td>
                    <td class="description_placeholder">{{ product_data.description or '' }}</td>
                    <td class="type_placeholder">{{ product_data.type or '' }}</td>
                    <td class="price_placeholder">{{ product_data.price or '' }}</td>
                    <td class="add_description_placeholder">{{ product_data.add_description or '' }}</td>
                </tr>
            </tbody>
        </table><br>

        <label for="value" title="value">R$</label>
        <input type="text" id="value" name="value" readonly><br>

        <button type="submit">CONFIRMAR</button>

        <script>
            function populateClientData() {
                var cpfCnpjInput = $('#cpf_cnpj');
                var clientDataInput = $('#client_data');
                var inputValue = cpfCnpjInput.val();

                if (inputValue) {
                    $.ajax({
                        type: 'POST',
                        url: '/get_client_data',
                        data: { cpf_cnpj: inputValue },
                        success: function (data) {
                            if (data && data.success) {
                                var clientData = data.client_data;
                                $('#company').val(clientData.company || '');
                                $('#contact_name').val(clientData.contact_name || '');
                                $('#phone').val(clientData.phone || '');
                                $('#email').val(clientData.email || '');
                                $('#number_store').val(clientData.number_store || '');
                            } else {
                                console.error('Error fetching client data:', data.error);
                            }
                        },
                        error: function (error) {
                            console.error('Error fetching client data:', error);
                        }
                    });
                }
            }
        </script>

        <script>
            function updateTable(productData) {
                var tableBody = $('#product_table_body');
                var existingRow = tableBody.find('tr[data-product-code="' + productData.product_code + '"]');

                if (existingRow.length > 0) {
                    existingRow.find('.description_placeholder').text(productData.description || '');
                    existingRow.find('.type_placeholder').text(productData.type || '');
                    existingRow.find('.price_placeholder').text(productData.price || '');
                    existingRow.find('.add_description_placeholder').text(productData.add_description || '');
                } else {

                    var newRow = $('<tr data-product-code="' + productData.product_code + '">');
                    newRow.append('<td class="product_code_placeholder">' + productData.product_code + '</td>');
                    newRow.append('<td class="description_placeholder">' + productData.description + '</td>');
                    newRow.append('<td class="type_placeholder">' + productData.type + '</td>');
                    newRow.append('<td class="price_placeholder">' + productData.price + '</td>');
                    newRow.append('<td class="add_description_placeholder">' + productData.add_description + '</td>');
                    tableBody.append(newRow);
                }
            }
        </script>

        <script>
            function populateProductData() {
                var productCodeInput = $('#product_code');

                var inputValue = productCodeInput.val();

                if (inputValue) {
                    $.ajax({
                        type: 'POST',
                        url: '/get_product_data',
                        data: { product_code: inputValue },
                        success: function (data) {
                            console.log('Received product data:', data);
                            if (data && data.success) {
                                var productData = data.product_data;

                                console.log('Product Code:', productData.product_code);
                                console.log('Description:', productData.description);
                                console.log('Type:', productData.type);
                                console.log('Price:', productData.price);
                                console.log('Add Description:', productData.add_description);

                                updateTable(productData);

                                productCodeInput.val('');
                            } else {
                                console.error('Error fetching product data:', data.error);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching product data:', error),
                            console.error('AJAX Request Error:', status, error);
                        }
                    });
                }
            }
        </script>

        <script>
            function updatePeriodDays() {
                var startDateInput = document.getElementById('start_date');
                var endDateInput = document.getElementById('end_date');
                var periodDaysInput = document.getElementById('period_days');

                if (startDateInput.value && endDateInput.value) {
                    var startDateParts = startDateInput.value.split('/');
                    var endDateParts = endDateInput.value.split('/');

                    var startDate = new Date(
                        parseInt(startDateParts[2]),
                        parseInt(startDateParts[1]) - 1,
                        parseInt(startDateParts[0])
                    );

                    var endDate = new Date(
                        parseInt(endDateParts[2]),
                        parseInt(endDateParts[1]) -1,
                        parseInt(endDateParts[0])
                    );

                    var timeDifference = Math.abs(endDate.getTime() - startDate.getTime());
                    var periodDays = Math.ceil(timeDifference / (1000 * 3600 * 24));

                    periodDaysInput.value = periodDays;
                } else {
                    periodDaysInput.value = '';
                }
            }
        </script>
    </form>
</body>
</html>

def buscar_produtos(product_code,):
    connection, cursor = create_connection()

    try:
        cursor.execute("""
            SELECT id, product_code, description, type, price, add_description
            FROM products WHERE product_code = %s
        """, (product_code,))
        product_data = cursor.fetchone()
        if product_data:
            columns = ['id', 'product_code', 'description', 'type', 'price', 'add_description']
            return dict(zip(columns, product_data))
        else:
            return {}
    except Exception as e:
        print(f"Error in buscar_produtos: {e}")
        return {}
    finally:
        close_connection(connection, cursor)

